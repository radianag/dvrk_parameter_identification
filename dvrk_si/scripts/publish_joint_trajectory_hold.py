#!/usr/bin/env python
# http://wiki.ros.org/rospy/Overview/Messages

#rostopic pub /dvrk/PSM1/set_robot_state std_msgs/String DVRK_POSITION_CARTESIAN
# rostopic info /dvrk/MTML/set_position_joint

import rospy
import math
import time
import csv
from sensor_msgs.msg import JointState
from std_msgs.msg import Header
from std_msgs.msg import String
r=25 #frequency Hz of the publisher and subscriber

def callback_joint(msg):
  global joint_sub
  joint_sub=msg

def main(ra):
    # Create Pose Publisher and Subscriber
    state_pub=rospy.Publisher('/dvrk/PSM1/set_robot_state',String,queue_size=10)
    joint_pub= rospy.Publisher('/dvrk/PSM1/set_position_joint', JointState, queue_size=10)
    rospy.Subscriber('/dvrk/PSM1/state_joint_current', JointState, callback_joint)
    rospy.init_node('Talkity_talk_talk',anonymous=True)
    rate = rospy.Rate(ra) # 1hz
    rospy.sleep(1
      )
     #set robot state
    state_pub.publish("DVRK_POSITION_JOINT")
    rospy.sleep(1)

    #hardcode home to zero 
    joint_msg= JointState()
    joint_msg.header = Header()
    joint_msg.header.stamp = rospy.Time.now()
    joint_msg.name = ['outer_yaw', 'outer_pitch', 'outer_insertion', 'outer_roll', 'outer__wrist_pitch','outer_wrist_jaw', 'jaw']
    joint_msg.position=[0]*7
    joint_msg.velocity = []  
    joint_msg.effort = []
    
    rospy.sleep(1)
    d=0.002
    thresh=0.003
    dq1=thresh+1
    dq2=thresh+1
    dq3=thresh+1
    while not rospy.is_shutdown():
    
      if -thresh<dq1<thresh and -thresh<dq2<thresh  and -thresh<dq3<thresh: 
        break
      else:
        if -thresh<joint_sub.position[0]<thresh:
          dq1=joint_sub.position[0] 
        elif joint_sub.position[0]<0: 
         dq1=joint_sub.position[0]+d
        else: 
          dq1=joint_sub.position[0]-d

        if -thresh<joint_sub.position[1]<thresh: 
         dq2=joint_sub.position[1]
        elif joint_sub.position[1]<0: 
          dq2=joint_sub.position[1]+d
        else: 
          dq2=joint_sub.position[1]-d

        if -thresh<joint_sub.position[2]<thresh:
          dq3=joint_sub.position[2]
        elif joint_sub.position[2]<0: 
          dq3=joint_sub.position[2]+d/5
        else: 
          dq3=joint_sub.position[2]-d/5
  

      #joint_msg.position = [dq1, dq2 , dq3 , None, None, None, None]
      
      joint_msg.position[0]=dq1
      joint_msg.position[1]=dq2
      joint_msg.position[2]=dq3
      joint_msg.position[3]=joint_sub.position[3]
      joint_msg.position[3]=joint_sub.position[4]
      joint_msg.position[3]=joint_sub.position[5]
      joint_msg.position[3]=joint_sub.position[6]

      print(joint_msg)

      joint_pub.publish(joint_msg)
      rospy.sleep(1/float(ra))

    rospy.sleep(8)

    #Excitation Trajectory Position Coordinates
    i=0

    q_data1=[0,6.2032e-07,4.9253e-06,1.6498e-05,3.881e-05,7.5225e-05,0.000129,0.00020328,0.00030111,0.00042542,0.00057906,0.00076476,0.00098513,0.0012427,0.00154,0.0018792,0.0022626,0.0026924,0.0031706,0.0036992,0.00428,0.0049148,0.0056052,0.006353,0.0071594,0.0080261,0.0089543,0.0099453,0.011,0.01212,0.013306,0.014559,0.015879,0.017269,0.018727,0.020255,0.021854,0.023523,0.025264,0.027076,0.02896,0.030916,0.032944,0.035044,0.037217,0.039461,0.041778,0.044166,0.046626,0.049156,0.051758,0.05443,0.057171,0.059982,0.062862,0.065809,0.068824,0.071905,0.075052,0.078264,0.08154,0.084879,0.08828,0.091741,0.095263,0.098844,0.10248,0.10618,0.10993,0.11373,0.11758,0.12149,0.12545,0.12945,0.13351,0.1376,0.14175,0.14593,0.15015,0.15442,0.15872,0.16306,0.16743,0.17183,0.17627,0.18074,0.18523,0.18975,0.19429,0.19885,0.20344,0.20804,0.21266,0.21729,0.22194,0.2266,0.23127,0.23595,0.24063,0.24531,0.25,0.25469,0.25937,0.26405,0.26873,0.2734,0.27806,0.28271,0.28734,0.29196,0.29656,0.30115,0.30571,0.31025,0.31477,0.31926,0.32373,0.32817,0.33257,0.33694,0.34128,0.34558,0.34985,0.35407,0.35825,0.3624,0.36649,0.37055,0.37455,0.37851,0.38242,0.38627,0.39007,0.39382,0.39752,0.40116,0.40474,0.40826,0.41172,0.41512,0.41846,0.42174,0.42495,0.42809,0.43118,0.43419,0.43714,0.44002,0.44283,0.44557,0.44824,0.45084,0.45337,0.45583,0.45822,0.46054,0.46278,0.46496,0.46706,0.46908,0.47104,0.47292,0.47474,0.47648,0.47815,0.47974,0.48127,0.48273,0.48412,0.48544,0.48669,0.48788,0.489,0.49005,0.49105,0.49197,0.49284,0.49365,0.49439,0.49509,0.49572,0.4963,0.49683,0.49731,0.49774,0.49812,0.49846,0.49876,0.49901,0.49924,0.49942,0.49957,0.4997,0.4998,0.49987,0.49992,0.49996,0.49998,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.50002,0.50004,0.50008,0.50013,0.5002,0.5003,0.50043,0.50058,0.50076,0.50099,0.50124,0.50154,0.50188,0.50226,0.50269,0.50317,0.5037,0.50428,0.50491,0.50561,0.50635,0.50716,0.50803,0.50895,0.50995,0.511,0.51212,0.51331,0.51456,0.51588,0.51727,0.51873,0.52026,0.52185,0.52352,0.52526,0.52708,0.52896,0.53092,0.53294,0.53504,0.53722,0.53946,0.54178,0.54417,0.54663,0.54916,0.55176,0.55443,0.55717,0.55998,0.56286,0.56581,0.56882,0.57191,0.57505,0.57826,0.58154,0.58488,0.58828,0.59174,0.59526,0.59884,0.60248,0.60618,0.60993,0.61373,0.61758,0.62149,0.62545,0.62945,0.63351,0.6376,0.64175,0.64593,0.65015,0.65442,0.65872,0.66306,0.66743,0.67183,0.67627,0.68074,0.68523,0.68975,0.69429,0.69885,0.70344,0.70804,0.71266,0.71729,0.72194,0.7266,0.73127,0.73595,0.74063,0.74531,0.75,0.75469,0.75937,0.76405,0.76873,0.7734,0.77806,0.78271,0.78734,0.79196,0.79656,0.80115,0.80571,0.81025,0.81477,0.81926,0.82373,0.82817,0.83257,0.83694,0.84128,0.84558,0.84985,0.85407,0.85825,0.8624,0.86649,0.87055,0.87455,0.87851,0.88242,0.88627,0.89007,0.89382,0.89752,0.90116,0.90474,0.90826,0.91172,0.91512,0.91846,0.92174,0.92495,0.92809,0.93118,0.93419,0.93714,0.94002,0.94283,0.94557,0.94824,0.95084,0.95337,0.95583,0.95822,0.96054,0.96278,0.96496,0.96706,0.96908,0.97104,0.97292,0.97474,0.97648,0.97815,0.97974,0.98127,0.98273,0.98412,0.98544,0.98669,0.98788,0.989,0.99005,0.99105,0.99197,0.99284,0.99365,0.99439,0.99509,0.99572,0.9963,0.99683,0.99731,0.99774,0.99812,0.99846,0.99876,0.99901,0.99924,0.99942,0.99957,0.9997,0.9998,0.99987,0.99992,0.99996,0.99998,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    q_data2=[0,4.3423e-07,3.4477e-06,1.1548e-05,2.7167e-05,5.2657e-05,9.0299e-05,0.00014229,0.00021078,0.0002978,0.00040534,0.00053533,0.00068959,0.00086991,0.001078,0.0013154,0.0015838,0.0018847,0.0022194,0.0025894,0.002996,0.0034403,0.0039237,0.0044471,0.0050116,0.0056183,0.006268,0.0069617,0.0077001,0.008484,0.0093142,0.010191,0.011116,0.012088,0.013109,0.014179,0.015298,0.016466,0.017685,0.018953,0.020272,0.021641,0.023061,0.024531,0.026052,0.027623,0.029244,0.030916,0.032638,0.034409,0.03623,0.038101,0.04002,0.041987,0.044003,0.046066,0.048177,0.050334,0.052537,0.054785,0.057078,0.059415,0.061796,0.064219,0.066684,0.06919,0.071737,0.074323,0.076948,0.07961,0.082309,0.085044,0.087814,0.090618,0.093454,0.096323,0.099222,0.10215,0.10511,0.10809,0.1111,0.11414,0.1172,0.12028,0.12339,0.12651,0.12966,0.13282,0.136,0.1392,0.14241,0.14563,0.14886,0.15211,0.15536,0.15862,0.16189,0.16516,0.16844,0.17172,0.175,0.17828,0.18156,0.18484,0.18811,0.19138,0.19464,0.19789,0.20114,0.20437,0.20759,0.2108,0.214,0.21718,0.22034,0.22349,0.22661,0.22972,0.2328,0.23586,0.2389,0.24191,0.24489,0.24785,0.25078,0.25368,0.25655,0.25938,0.26219,0.26496,0.26769,0.27039,0.27305,0.27568,0.27826,0.28081,0.28332,0.28578,0.2882,0.29058,0.29292,0.29522,0.29746,0.29967,0.30182,0.30393,0.306,0.30801,0.30998,0.3119,0.31377,0.31559,0.31736,0.31908,0.32076,0.32238,0.32395,0.32547,0.32694,0.32836,0.32973,0.33105,0.33232,0.33353,0.3347,0.33582,0.33689,0.33791,0.33888,0.33981,0.34069,0.34152,0.3423,0.34304,0.34373,0.34438,0.34499,0.34555,0.34608,0.34656,0.347,0.34741,0.34778,0.34812,0.34842,0.34868,0.34892,0.34913,0.34931,0.34946,0.34959,0.3497,0.34979,0.34986,0.34991,0.34995,0.34997,0.34999,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35001,0.35003,0.35005,0.35009,0.35014,0.35021,0.3503,0.35041,0.35054,0.35069,0.35087,0.35108,0.35132,0.35158,0.35188,0.35222,0.35259,0.353,0.35344,0.35392,0.35445,0.35501,0.35562,0.35627,0.35696,0.3577,0.35848,0.35931,0.36019,0.36112,0.36209,0.36311,0.36418,0.3653,0.36647,0.36768,0.36895,0.37027,0.37164,0.37306,0.37453,0.37605,0.37762,0.37924,0.38092,0.38264,0.38441,0.38623,0.3881,0.39002,0.39199,0.394,0.39607,0.39818,0.40033,0.40254,0.40478,0.40708,0.40942,0.4118,0.41422,0.41668,0.41919,0.42174,0.42432,0.42695,0.42961,0.43231,0.43504,0.43781,0.44062,0.44345,0.44632,0.44922,0.45215,0.45511,0.45809,0.4611,0.46414,0.4672,0.47028,0.47339,0.47651,0.47966,0.48282,0.486,0.4892,0.49241,0.49563,0.49886,0.50211,0.50536,0.50862,0.51189,0.51516,0.51844,0.52172,0.525,0.52828,0.53156,0.53484,0.53811,0.54138,0.54464,0.54789,0.55114,0.55437,0.55759,0.5608,0.564,0.56718,0.57034,0.57349,0.57661,0.57972,0.5828,0.58586,0.5889,0.59191,0.59489,0.59785,0.60078,0.60368,0.60655,0.60938,0.61219,0.61496,0.61769,0.62039,0.62305,0.62568,0.62826,0.63081,0.63332,0.63578,0.6382,0.64058,0.64292,0.64522,0.64746,0.64967,0.65182,0.65393,0.656,0.65801,0.65998,0.6619,0.66377,0.66559,0.66736,0.66908,0.67076,0.67238,0.67395,0.67547,0.67694,0.67836,0.67973,0.68105,0.68232,0.68353,0.6847,0.68582,0.68689,0.68791,0.68888,0.68981,0.69069,0.69152,0.6923,0.69304,0.69373,0.69438,0.69499,0.69555,0.69608,0.69656,0.697,0.69741,0.69778,0.69812,0.69842,0.69868,0.69892,0.69913,0.69931,0.69946,0.69959,0.6997,0.69979,0.69986,0.69991,0.69995,0.69997,0.69999,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7]
    q_data3=[0,1.2406e-07,9.8506e-07,3.2995e-06,7.7619e-06,1.5045e-05,2.58e-05,4.0656e-05,6.0221e-05,8.5085e-05,0.00011581,0.00015295,0.00019703,0.00024855,0.00030799,0.00037584,0.00045253,0.00053849,0.00063413,0.00073984,0.000856,0.00098296,0.001121,0.0012706,0.0014319,0.0016052,0.0017909,0.0019891,0.0022,0.002424,0.0026612,0.0029118,0.0031759,0.0034537,0.0037454,0.004051,0.0043707,0.0047046,0.0050528,0.0054152,0.005792,0.0061832,0.0065888,0.0070089,0.0074434,0.0078923,0.0083556,0.0088332,0.0093251,0.0098313,0.010352,0.010886,0.011434,0.011996,0.012572,0.013162,0.013765,0.014381,0.01501,0.015653,0.016308,0.016976,0.017656,0.018348,0.019053,0.019769,0.020496,0.021235,0.021985,0.022746,0.023517,0.024298,0.02509,0.025891,0.026701,0.027521,0.028349,0.029186,0.030031,0.030884,0.031744,0.032612,0.033486,0.034367,0.035254,0.036147,0.037045,0.037949,0.038858,0.03977,0.040687,0.041608,0.042532,0.043459,0.044388,0.04532,0.046254,0.047189,0.048125,0.049063,0.05,0.050937,0.051875,0.052811,0.053746,0.05468,0.055612,0.056541,0.057468,0.058392,0.059313,0.06023,0.061142,0.062051,0.062955,0.063853,0.064746,0.065633,0.066514,0.067388,0.068256,0.069116,0.069969,0.070814,0.071651,0.072479,0.073299,0.074109,0.07491,0.075702,0.076483,0.077254,0.078015,0.078765,0.079504,0.080231,0.080947,0.081652,0.082344,0.083024,0.083692,0.084347,0.08499,0.085619,0.086235,0.086838,0.087428,0.088004,0.088566,0.089114,0.089648,0.090169,0.090675,0.091167,0.091644,0.092108,0.092557,0.092991,0.093411,0.093817,0.094208,0.094585,0.094947,0.095295,0.095629,0.095949,0.096255,0.096546,0.096824,0.097088,0.097339,0.097576,0.0978,0.098011,0.098209,0.098395,0.098568,0.098729,0.098879,0.099017,0.099144,0.09926,0.099366,0.099462,0.099547,0.099624,0.099692,0.099751,0.099803,0.099847,0.099884,0.099915,0.09994,0.099959,0.099974,0.099985,0.099992,0.099997,0.099999,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.10001,0.10002,0.10003,0.10004,0.10006,0.10009,0.10012,0.10015,0.1002,0.10025,0.10031,0.10038,0.10045,0.10054,0.10063,0.10074,0.10086,0.10098,0.10112,0.10127,0.10143,0.10161,0.10179,0.10199,0.1022,0.10242,0.10266,0.10291,0.10318,0.10345,0.10375,0.10405,0.10437,0.1047,0.10505,0.10542,0.10579,0.10618,0.10659,0.10701,0.10744,0.10789,0.10836,0.10883,0.10933,0.10983,0.11035,0.11089,0.11143,0.112,0.11257,0.11316,0.11376,0.11438,0.11501,0.11565,0.11631,0.11698,0.11766,0.11835,0.11905,0.11977,0.1205,0.12124,0.12199,0.12275,0.12352,0.1243,0.12509,0.12589,0.1267,0.12752,0.12835,0.12919,0.13003,0.13088,0.13174,0.13261,0.13349,0.13437,0.13525,0.13615,0.13705,0.13795,0.13886,0.13977,0.14069,0.14161,0.14253,0.14346,0.14439,0.14532,0.14625,0.14719,0.14813,0.14906,0.15,0.15094,0.15187,0.15281,0.15375,0.15468,0.15561,0.15654,0.15747,0.15839,0.15931,0.16023,0.16114,0.16205,0.16295,0.16385,0.16475,0.16563,0.16651,0.16739,0.16826,0.16912,0.16997,0.17081,0.17165,0.17248,0.1733,0.17411,0.17491,0.1757,0.17648,0.17725,0.17801,0.17876,0.1795,0.18023,0.18095,0.18165,0.18234,0.18302,0.18369,0.18435,0.18499,0.18562,0.18624,0.18684,0.18743,0.188,0.18857,0.18911,0.18965,0.19017,0.19067,0.19117,0.19164,0.19211,0.19256,0.19299,0.19341,0.19382,0.19421,0.19458,0.19495,0.1953,0.19563,0.19595,0.19625,0.19655,0.19682,0.19709,0.19734,0.19758,0.1978,0.19801,0.19821,0.19839,0.19857,0.19873,0.19888,0.19902,0.19914,0.19926,0.19937,0.19946,0.19955,0.19962,0.19969,0.19975,0.1998,0.19985,0.19988,0.19991,0.19994,0.19996,0.19997,0.19998,0.19999,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2]
    
    q_output=[None]*len(q_data1)
    qd_output=[None]*len(q_data1)
    torque_output=[None]*len(q_data1)
    while not rospy.is_shutdown():
      if i>len(q_data1)-1:
        break
      joint_msg.position = [q_data1[i], q_data2[i], q_data3[i],joint_sub.position[3],joint_sub.position[4],joint_sub.position[5],joint_sub.position[6]]
      joint_msg.velocity = []  
      joint_msg.effort = []
      print(joint_msg)
      joint_pub.publish(joint_msg)

      q_output[i]=joint_sub.position
      qd_output[i]=joint_sub.velocity
      torque_output[i]=joint_sub.effort

      rospy.sleep(1/float(ra))
      i+=1
    rate.sleep()
    
    #Print Code
    with open('data_position.csv', 'wb') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_NONE)
        for i in range(0,len(q_data1)):
          wr.writerow(q_output[i])
    with open('data_velocity.csv', 'wb') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_NONE)
        for i in range(0,len(q_data1)):
          wr.writerow(qd_output[i])
    with open('data_torque.csv', 'wb') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_NONE)
        for i in range(0,len(q_data1)):
          wr.writerow(torque_output[i])    
    

if __name__ == '__main__':
    try:
      main(r)
      
    except rospy.ROSInterruptException:
      
      pass
